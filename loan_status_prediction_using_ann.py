# -*- coding: utf-8 -*-
"""Loan status Prediction using ANN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15TB56tw5CBCKP1SDKJzUUj3eIS524gW0
"""

# Importing necessary libraries
import pandas as pd           # For data manipulation
import matplotlib.pyplot as plt  # For plotting graphs
import seaborn as sns          # For statistical data visualization

pip install --upgrade keras

import keras
print(keras.__version__)

df = pd.read_csv('/content/loan_data.csv', encoding='latin1')

df

df = df.drop(columns=['Loan_ID'])

df

df.head()

df.tail()

df.nunique()

df.info()

df.shape

df.size

sns.histplot(df['Gender'], kde=True, color='blue')

sns.histplot(df['Dependents'], kde=True, color='red')

sns.histplot(df['Credit_History'], kde=True, color='pink')

df['Gender'].mode()

label=df['Gender'].mode()[0]

df['Gender'].fillna(label,inplace=True)

label=df['Self_Employed'].mode()[0]

df['Self_Employed'].fillna(label,inplace=True)

sns.histplot(df['Loan_Amount_Term'])

val=df['Loan_Amount_Term'].median()

df['Loan_Amount_Term'].fillna(val,inplace=True)

val=df['Dependents'].mode()[0]

df['Dependents'].fillna(val,inplace=True)

df['Dependents'].fillna(val,inplace=True)

sval=df['Credit_History'].median()

df['Credit_History'].fillna(val,inplace=True)

df.isnull().sum()

from sklearn.preprocessing import LabelEncoder

le=LabelEncoder()

df['Gender']=le.fit_transform(df['Gender'])

df['Married']=le.fit_transform(df['Married'])

df['Education']=le.fit_transform(df['Education'])

df['Self_Employed']=le.fit_transform(df['Self_Employed'])

df['Property_Area']=le.fit_transform(df['Property_Area'])

df['ApplicantIncome']=le.fit_transform(df['ApplicantIncome'])

df['Dependents']=le.fit_transform(df['Dependents'])

df['Loan_Status']=le.fit_transform(df['Loan_Status'])

df.info()

from sklearn.model_selection import train_test_split

X=df.drop('Loan_Status',axis=1)

y=df['Loan_Status']

X_train, X_test, y_train, Y_test = train_test_split(
    X,y, test_size=0.33, random_state=42)

"""Keras Deep learning"""

import keras
from keras import layers
from keras import ops

model = keras.Sequential()
model.add(keras.Input(shape=(11,)))
model.add(keras.layers.Dense(8,activation='relu'))
model.add(keras.layers.Dense(8,activation='relu'))
model.add(keras.layers.Dense(1,activation='sigmoid'))

model.summary()

"""Compile model"""



model.compile(optimizer='adam',
              loss= 'BinaryCrossentropy',
              metrics=['accuracy'])

model.fit(
    x=X_train,
    y=y_train,
    batch_size=None,
    epochs=60,
    verbose = "auto",
    validation_data=(X_test,Y_test)
)

model.evaluate(
    x=X_test,
    y=Y_test,
    batch_size=32,
    verbose="auto")

model.predict(X_test,batch_size=32,verbose="auto")

